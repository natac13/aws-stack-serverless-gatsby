---
AWSTemplateFormatVersion: "2010-09-09"

Description: "Create stack for hosting a gatsby rendered website on S3 with CloudFront"

Parameters:
  DomainName:
    Type: String
    Description: "Domain without www"
    MinLength: 4
    MaxLength: 253
    AllowedPattern: "[a-z0-9]+[-.a-z0-9]*(\\.[a-z][a-z]+)+"
    ConstraintDescription: "Provide a valid domain name using only lowercase letters, numbers, and dash (-)"

  PriceClass:
    Type: String
    Description: The CloudFront distribution price class
    Default: "PriceClass_100"
    AllowedValues:
      - "PriceClass_100"
      - "PriceClass_200"
      - "PriceClass_All"

  DefaultTTL:
    Type: Number
    Description: "TTL in seconds"
    Default: 4320

  MinimumTTL:
    Description: "Minimum cache lifetime in seconds for the CloudFront distribution"
    Default: 5
    Type: Number

Resources:
  #### S3 BUCKETS
  # Bucket for CloudFront and S3 access logs: logs.example.com
  LogsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "logs.${DomainName}"
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    DeletionPolicy: Delete

  # Bucket for site content: www.example.com
  SiteBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref DomainName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    DeletionPolicy: Delete

  SiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "s3:GetObject"
            Principal: "*"
            Resource: !Sub "${SiteBucket.Arn}/*"

  # Bucket to redirect to www.example.com: example.com
  DevTestBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "dev.${DomainName}"
      AccessControl: BucketOwnerFullControl
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    DeletionPolicy: Delete

  DevTestBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DevTestBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "s3:GetObject"
            Principal: "*"
            Resource: !Sub "${DevTestBucket.Arn}/*"

  #### RUN
  # CDN serves S3 content over HTTPS for www.example.com
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - !Ref DomainName
          - !Sub "www.${DomainName}"
        PriceClass: !Ref PriceClass # Use Only US, Canada and Europe
        Origins:
          - DomainName:
              !Join [
                "",
                [
                  !Ref SiteBucket,
                  ".",
                  !FindInMap [RegionMap, !Ref "AWS::Region", websiteendpoint],
                ],
              ]
            Id: !Ref DomainName
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: "https-only"
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
        DefaultCacheBehavior:
          TargetOriginId: !Ref DomainName
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: !Ref DefaultTTL
          MinTTL: !Ref MinimumTTL
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        # logs.example.com/logs/cloudfront/www.example.com/
        DefaultRootObject: "index.html"
        Logging:
          Bucket: !GetAtt LogsBucket.DomainName
          Prefix: !Sub "logs/cloudfront/${DomainName}/"
          IncludeCookies: false
        ViewerCertificate:
          AcmCertificateArn: !Ref Cert
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only

  # CDN serves S3 content over HTTPS for example.com
  DevTestCloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
          - !Sub "dev.${DomainName}"
        PriceClass: !Ref PriceClass
        Origins:
          - DomainName:
              !Join [
                "",
                [
                  !Ref DevTestBucket,
                  ".",
                  !FindInMap [RegionMap, !Ref "AWS::Region", websiteendpoint],
                ],
              ]
            Id: !Sub "dev.${DomainName}"
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: "https-only"
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
        DefaultCacheBehavior:
          TargetOriginId: !Sub "dev.${DomainName}"
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          DefaultTTL: !Ref DefaultTTL
          MinTTL: !Ref MinimumTTL
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        # logs.example.com/logs/cloudfront/www.example.com/
        DefaultRootObject: "index.html"
        Logging:
          Bucket: !GetAtt LogsBucket.DomainName
          Prefix: !Sub "logs/cloudfront/dev.${DomainName}/"
          IncludeCookies: false
        ViewerCertificate:
          AcmCertificateArn: !Ref Cert
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only

  # DNS: example.com, www.example.com
  Cert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub "*.${DomainName}"
      SubjectAlternativeNames:
        - !Sub "*.${DomainName}"
        - !Ref DomainName
      ValidationMethod: DNS

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub "${DomainName}."
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            DNSName: !GetAtt CloudFrontDistribution.DomainName
            EvaluateTargetHealth: false
            HostedZoneId: Z2FDTNDATAQYW2
        - Name: !Sub "www.${DomainName}"
          Type: A
          AliasTarget:
            DNSName: !GetAtt CloudFrontDistribution.DomainName
            EvaluateTargetHealth: false
            HostedZoneId: Z2FDTNDATAQYW2
        - Name: !Sub "dev.${DomainName}"
          Type: A
          AliasTarget:
            DNSName: !GetAtt DevTestCloudFrontDistribution.DomainName
            EvaluateTargetHealth: false
            HostedZoneId: Z2FDTNDATAQYW2

Outputs:
  DomainName:
    Description: Domain name
    Value: !Ref DomainName
  SiteBucket:
    Value: !Ref SiteBucket
  DevTestBucket:
    Value: !Ref DevTestBucket

Mappings:
  RegionMap:
    ap-northeast-1:
      S3hostedzoneID: "Z2M4EHUR26P7ZW"
      websiteendpoint: "s3-website-ap-northeast-1.amazonaws.com"
    ap-northeast-2:
      S3hostedzoneID: "Z3W03O7B5YMIYP"
      websiteendpoint: "s3-website.ap-northeast-2.amazonaws.com"
    ap-south-1:
      S3hostedzoneID: "Z11RGJOFQNVJUP"
      websiteendpoint: "s3-website.ap-south-1.amazonaws.com"
    ap-southeast-1:
      S3hostedzoneID: "Z3O0J2DXBE1FTB"
      websiteendpoint: "s3-website-ap-southeast-1.amazonaws.com"
    ap-southeast-2:
      S3hostedzoneID: "Z1WCIGYICN2BYD"
      websiteendpoint: "s3-website-ap-southeast-2.amazonaws.com"
    eu-central-1:
      S3hostedzoneID: "Z21DNDUVLTQW6Q"
      websiteendpoint: "s3-website.eu-central-1.amazonaws.com"
    eu-west-1:
      S3hostedzoneID: "Z1BKCTXD74EZPE"
      websiteendpoint: "s3-website-eu-west-1.amazonaws.com"
    sa-east-1:
      S3hostedzoneID: "Z7KQH4QJS55SO"
      websiteendpoint: "s3-website-sa-east-1.amazonaws.com"
    us-east-1:
      S3hostedzoneID: "Z3AQBSTGFYJSTF"
      websiteendpoint: "s3-website-us-east-1.amazonaws.com"
    us-east-2:
      S3hostedzoneID: "Z2O1EMRO9K5GLX"
      websiteendpoint: "s3-website.us-east-2.amazonaws.com"
    us-west-1:
      S3hostedzoneID: "Z2F56UZL2M1ACD"
      websiteendpoint: "s3-website-us-west-1.amazonaws.com"
    us-west-2:
      S3hostedzoneID: "Z3BJ6K6RIION7M"
      websiteendpoint: "s3-website-us-west-2.amazonaws.com"
# Metadata:
